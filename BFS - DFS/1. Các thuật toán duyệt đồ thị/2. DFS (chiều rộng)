#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll nmax=2*10e5 + 5;
ll n,m,a,b,u,v,trace[nmax];
bool avalid[nmax];
vector <int> dsk[nmax];
void dfs(int u)
{
	avalid[u]=1;
	cout<<u<<" ";
	for(int i=0;i<dsk[u].size();i++)
	{
		if(avalid[dsk[u][i]]==0)
		{
		dfs(dsk[u][i]);
		trace[dsk[u][i]]=u;
      	}
	}
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    freopen("TEST.INP","r",stdin);
    freopen("TEST.OUT","w",stdout);
    cin>>n>>m>>u>>v;
    for(int i=0;i<m;i++)
    {
    	cin>>a>>b;
    	dsk[a].push_back(b);
    	dsk[b].push_back(a);
	}
	for(int i=1;i<=n;i++)
	    sort(dsk[i].begin(),dsk[i].end());
 
    for(int i=1;i<=n;i++)avalid[i]=0;
    dfs(u);
    if(avalid[v]==1)
	{
		cout<<"YES\n";
		while(v!=u)
		{
			cout<<v<<" <- ";
			v=trace[v];
		}
		cout<<v<<endl;
    }
    else cout<<"NO\n";
    return 0;
}
